name: Automated Deployment with Docker Container

on:
  push:
    branches:
      - docker
jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Install dependencies
        run: |
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install -r requirements.txt
          deactivate
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY_USER }}/${{ secrets.DOCKER_IMAGE_NAME }}
          build-args: |
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Pull image and run container
        uses: appleboy/ssh-action@v0.1.10
        env:
          GCP_SSH_PRIVATE_KEY: ${{ secrets.DOCKER_GCP_SSH_PRIVATE_KEY }}
          GCP_USERNAME: ${{ secrets.DOCKER_GCP_USERNAME }}
          GCP_STATIC_IP: ${{ secrets.DOCKER_GCP_STATIC_IP }}
          CONTAINER_NAME: ${{ secrets.DOCKER_CONTAINER_NAME }}
          REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
          IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
        run: |
          echo "$GCP_SSH_PRIVATE_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem $GCP_USERNAME@$GCP_STATIC_IP "
          docker container rm -f $CONTAINER_NAME || true &&
          docker image rm -f $REGISTRY_USER/$IMAGE_NAME || true &&
          docker run --name $CONTAINER_NAME -d -p 5000:8000"
